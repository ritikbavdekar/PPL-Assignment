main=====================================================
<program> 
inside buildParseTree
k = 0
stack element #0:
symbol: <program>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, <k_program>
this non terminal was replaced with 6 tokens.
=====================================================
<program> 
    <k_program> 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 6
stack element #0:
symbol: <k_program>, isTerminal: 0 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, program
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: program, isTerminal: 1 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
program program 15
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_open>, isTerminal: 0 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
top of stack is, (
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: (, isTerminal: 1 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
( ( 7
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_close>, isTerminal: 0 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
top of stack is, )
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ), isTerminal: 1 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
) ) 8
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <curl_open>, isTerminal: 0 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
top of stack is, {
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: {, isTerminal: 1 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
{ { 9
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <statement_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_list>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
declare declare 19
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, list
this non terminal was replaced with 7 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        list 
                        of 
                        variables 
                        <var_list> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 7
stack element #0:
symbol: list, isTerminal: 1 

stack element #1:
symbol: of, isTerminal: 1 

stack element #2:
symbol: variables, isTerminal: 1 

stack element #3:
symbol: <var_list>, isTerminal: 0 

stack element #4:
symbol: <colon>, isTerminal: 0 

stack element #5:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #8:
symbol: <assn_list>, isTerminal: 0 

stack element #9:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 list 27
v1 
not matching
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <colon>, isTerminal: 0 

stack element #2:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #5:
symbol: <assn_list>, isTerminal: 0 

stack element #6:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <colon>, isTerminal: 0 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
top of stack is, :
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: :, isTerminal: 1 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
: : 13
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, <k_integer>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <k_integer>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, integer
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: integer, isTerminal: 1 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
integer integer 16
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                                    declare 
                                    <decs_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <dec_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                                    declare 
                                    <decs_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn_list>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <assn_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <assn>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <op_equal>, isTerminal: 0 

stack element #2:
symbol: <expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <op_equal>, isTerminal: 0 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
top of stack is, =
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: =, isTerminal: 1 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
= = 6
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <bool_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_term>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <var_name> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arr_mem>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arr_mem>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                        <var_name> 
                                        <sq_open> 
                                        <num_list> 
                                        <sq_close> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <sq_open>, isTerminal: 0 

stack element #2:
symbol: <num_list>, isTerminal: 0 

stack element #3:
symbol: <sq_close>, isTerminal: 0 

stack element #4:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #5:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_assn>, isTerminal: 0 

stack element #8:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arith_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <var_name> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <const>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <const>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <const> 28
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <high_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <high_op> 
                                        <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <high_op>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_mul>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <high_op> 
                                            <op_mul> 
                                        <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_mul>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, *
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <high_op> 
                                            <op_mul> 
                                                * 
                                        <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: *, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; * 14
; 
not matching
top of stack is, <op_div>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <high_op> 
                                            <op_div> 
                                        <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_div>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, /
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <high_op> 
                                            <op_div> 
                                                / 
                                        <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: /, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; / 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <extra_arith_expr>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <low_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <low_op>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_plus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_plus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, +
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                            + 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: +, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; + 14
; 
not matching
top of stack is, <op_minus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_minus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, -
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                            - 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: -, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; - 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <semicolon>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                                ; 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    main=====================================================
<program> 
inside buildParseTree
k = 0
stack element #0:
symbol: <program>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, <k_program>
this non terminal was replaced with 6 tokens.
=====================================================
<program> 
    <k_program> 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 6
stack element #0:
symbol: <k_program>, isTerminal: 0 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, program
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: program, isTerminal: 1 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
program program 15
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_open>, isTerminal: 0 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
top of stack is, (
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: (, isTerminal: 1 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
( ( 7
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_close>, isTerminal: 0 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
top of stack is, )
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ), isTerminal: 1 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
) ) 8
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <curl_open>, isTerminal: 0 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
top of stack is, {
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: {, isTerminal: 1 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
{ { 9
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <statement_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_list>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
declare declare 19
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, list
this non terminal was replaced with 7 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        list 
                        of 
                        variables 
                        <var_list> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 7
stack element #0:
symbol: list, isTerminal: 1 

stack element #1:
symbol: of, isTerminal: 1 

stack element #2:
symbol: variables, isTerminal: 1 

stack element #3:
symbol: <var_list>, isTerminal: 0 

stack element #4:
symbol: <colon>, isTerminal: 0 

stack element #5:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #8:
symbol: <assn_list>, isTerminal: 0 

stack element #9:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 list 27
v1 
not matching
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <colon>, isTerminal: 0 

stack element #2:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #5:
symbol: <assn_list>, isTerminal: 0 

stack element #6:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <colon>, isTerminal: 0 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
top of stack is, :
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: :, isTerminal: 1 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
: : 13
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, <k_integer>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <k_integer>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, integer
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: integer, isTerminal: 1 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
integer integer 16
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                                    declare 
                                    <decs_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <dec_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                                    declare 
                                    <decs_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn_list>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <assn_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <assn>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <op_equal>, isTerminal: 0 

stack element #2:
symbol: <expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <op_equal>, isTerminal: 0 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
top of stack is, =
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: =, isTerminal: 1 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
= = 6
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <bool_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_term>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <var_name> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arr_mem>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arr_mem>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                        <var_name> 
                                        <sq_open> 
                                        <num_list> 
                                        <sq_close> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <sq_open>, isTerminal: 0 

stack element #2:
symbol: <num_list>, isTerminal: 0 

stack element #3:
symbol: <sq_close>, isTerminal: 0 

stack element #4:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #5:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_assn>, isTerminal: 0 

stack element #8:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arith_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <var_name> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <const>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <const>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <const> 28
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <high_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <high_op>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_mul>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_mul> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_mul>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, *
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_mul> 
                                                    * 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: *, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; * 14
; 
not matching
top of stack is, <op_div>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_div> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_div>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, /
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_div> 
                                                    / 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: /, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; / 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <extra_arith_expr>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <low_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <low_op>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_plus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_plus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, +
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                            + 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: +, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; + 14
; 
not matching
top of stack is, <op_minus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_minus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, -
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                            - 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: -, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; - 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <semicolon>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                                ; 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                 main=====================================================
<program> 
inside buildParseTree
k = 0
stack element #0:
symbol: <program>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, <k_program>
this non terminal was replaced with 6 tokens.
=====================================================
<program> 
    <k_program> 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 6
stack element #0:
symbol: <k_program>, isTerminal: 0 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, program
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: program, isTerminal: 1 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
program program 15
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_open>, isTerminal: 0 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
top of stack is, (
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: (, isTerminal: 1 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
( ( 7
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_close>, isTerminal: 0 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
top of stack is, )
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ), isTerminal: 1 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
) ) 8
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <curl_open>, isTerminal: 0 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
top of stack is, {
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: {, isTerminal: 1 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
{ { 9
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <statement_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_list>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
declare declare 19
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, list
this non terminal was replaced with 7 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        list 
                        of 
                        variables 
                        <var_list> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 7
stack element #0:
symbol: list, isTerminal: 1 

stack element #1:
symbol: of, isTerminal: 1 

stack element #2:
symbol: variables, isTerminal: 1 

stack element #3:
symbol: <var_list>, isTerminal: 0 

stack element #4:
symbol: <colon>, isTerminal: 0 

stack element #5:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #8:
symbol: <assn_list>, isTerminal: 0 

stack element #9:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 list 27
v1 
not matching
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <colon>, isTerminal: 0 

stack element #2:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #5:
symbol: <assn_list>, isTerminal: 0 

stack element #6:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <colon>, isTerminal: 0 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
top of stack is, :
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: :, isTerminal: 1 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
: : 13
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, <k_integer>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <k_integer>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, integer
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: integer, isTerminal: 1 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
integer integer 16
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                                    declare 
                                    <decs_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <dec_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                                    declare 
                                    <decs_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn_list>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <assn_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <assn>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <op_equal>, isTerminal: 0 

stack element #2:
symbol: <expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <op_equal>, isTerminal: 0 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
top of stack is, =
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: =, isTerminal: 1 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
= = 6
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <bool_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_term>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <var_name> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arr_mem>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arr_mem>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                        <var_name> 
                                        <sq_open> 
                                        <num_list> 
                                        <sq_close> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <sq_open>, isTerminal: 0 

stack element #2:
symbol: <num_list>, isTerminal: 0 

stack element #3:
symbol: <sq_close>, isTerminal: 0 

stack element #4:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #5:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_assn>, isTerminal: 0 

stack element #8:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arith_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <var_name> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <const>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <const>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <const> 28
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <high_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <high_op>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_mul>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_mul> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_mul>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, *
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_mul> 
                                                    * 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: *, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; * 14
; 
not matching
top of stack is, <op_div>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_div> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_div>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, /
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <high_op> 
                                                <op_div> 
                                                    / 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: /, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; / 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <extra_arith_expr>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <low_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <low_op>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_plus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_plus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, +
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                            + 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: +, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; + 14
; 
not matching
top of stack is, <op_minus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_minus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, -
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                            - 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: -, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; - 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <semicolon>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                                ; 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            <var_name> 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        <var_name> 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        <const> 
                                 main=====================================================
<program> 
inside buildParseTree
k = 0
stack element #0:
symbol: <program>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, <k_program>
this non terminal was replaced with 6 tokens.
=====================================================
<program> 
    <k_program> 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 6
stack element #0:
symbol: <k_program>, isTerminal: 0 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
top of stack is, program
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: program, isTerminal: 1 

stack element #1:
symbol: <par_open>, isTerminal: 0 

stack element #2:
symbol: <par_close>, isTerminal: 0 

stack element #3:
symbol: <curl_open>, isTerminal: 0 

stack element #4:
symbol: <statement_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: program, Token id: 15, Line number: 1
program program 15
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_open>, isTerminal: 0 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
top of stack is, (
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: (, isTerminal: 1 

stack element #1:
symbol: <par_close>, isTerminal: 0 

stack element #2:
symbol: <curl_open>, isTerminal: 0 

stack element #3:
symbol: <statement_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: (, Token id: 7, Line number: 1
( ( 7
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <par_close>, isTerminal: 0 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
top of stack is, )
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ), isTerminal: 1 

stack element #1:
symbol: <curl_open>, isTerminal: 0 

stack element #2:
symbol: <statement_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ), Token id: 8, Line number: 1
) ) 8
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <curl_open>, isTerminal: 0 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
top of stack is, {
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: {, isTerminal: 1 

stack element #1:
symbol: <statement_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: {, Token id: 9, Line number: 1
{ { 9
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <statement_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_list>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: declare, Token id: 19, Line number: 1
declare declare 19
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, list
this non terminal was replaced with 7 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        list 
                        of 
                        variables 
                        <var_list> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 7
stack element #0:
symbol: list, isTerminal: 1 

stack element #1:
symbol: of, isTerminal: 1 

stack element #2:
symbol: variables, isTerminal: 1 

stack element #3:
symbol: <var_list>, isTerminal: 0 

stack element #4:
symbol: <colon>, isTerminal: 0 

stack element #5:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #8:
symbol: <assn_list>, isTerminal: 0 

stack element #9:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 list 27
v1 
not matching
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <colon>, isTerminal: 0 

stack element #2:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #5:
symbol: <assn_list>, isTerminal: 0 

stack element #6:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <colon>, isTerminal: 0 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
top of stack is, :
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: :, isTerminal: 1 

stack element #1:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #4:
symbol: <assn_list>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: :, Token id: 13, Line number: 1
: : 13
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <non_jagged_type>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, <k_integer>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <k_integer>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
top of stack is, integer
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: integer, isTerminal: 1 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: integer, Token id: 16, Line number: 1
integer integer 16
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <semicolon>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, ;
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: ;, isTerminal: 1 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; ; 14
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <dec>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <dec_non_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_non_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_non_jagged> 
                                    declare 
                                    <decs_non_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_non_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <dec_jagged>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <dec_jagged>, isTerminal: 0 

stack element #1:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #2:
symbol: <assn_list>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, declare
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <dec> 
                                <dec_jagged> 
                                    declare 
                                    <decs_jagged> 
                            <extra_dec_list> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: declare, isTerminal: 1 

stack element #1:
symbol: <decs_jagged>, isTerminal: 0 

stack element #2:
symbol: <extra_dec_list>, isTerminal: 0 

stack element #3:
symbol: <assn_list>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 declare 27
v1 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <assn_list>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn_list>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <assn_list>, isTerminal: 0 

stack element #1:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <assn>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <assn>, isTerminal: 0 

stack element #1:
symbol: <extra_assn>, isTerminal: 0 

stack element #2:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <op_equal>, isTerminal: 0 

stack element #2:
symbol: <expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: v1, Token id: 27, Line number: 1
v1 <var_name> 27
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 3
stack element #0:
symbol: <op_equal>, isTerminal: 0 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
top of stack is, =
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: =, isTerminal: 1 

stack element #1:
symbol: <expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: =, Token id: 6, Line number: 1
= = 6
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <bool_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_term>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <bool_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <bool_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <var_name> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arr_mem>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arr_mem>, isTerminal: 0 

stack element #1:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #2:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 4 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <bool_expr> 
                            <bool_term> 
                                <bool_factor> 
                                    <arr_mem> 
                                        <var_name> 
                                        <sq_open> 
                                        <num_list> 
                                        <sq_close> 
                                <extra_bool_term> 
                            <extra_bool_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 4
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <sq_open>, isTerminal: 0 

stack element #2:
symbol: <num_list>, isTerminal: 0 

stack element #3:
symbol: <sq_close>, isTerminal: 0 

stack element #4:
symbol: <extra_bool_term>, isTerminal: 0 

stack element #5:
symbol: <extra_bool_expr>, isTerminal: 0 

stack element #6:
symbol: <semicolon>, isTerminal: 0 

stack element #7:
symbol: <extra_assn>, isTerminal: 0 

stack element #8:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <arith_expr>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_term>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <arith_factor>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <arith_factor>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
top of stack is, <var_name>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <var_name> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <var_name>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <var_name> 28
15 
not matching
top of stack is, <const>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <const>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: 15, Token id: 28, Line number: 1
15 <const> 28
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_term>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <high_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <high_op> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <high_op>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_mul>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <high_op> 
                                                <op_mul> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_mul>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, *
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <high_op> 
                                                <op_mul> 
                                                    * 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: *, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; * 14
; 
not matching
top of stack is, <op_div>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <high_op> 
                                                <op_div> 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_div>, isTerminal: 0 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, /
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <high_op> 
                                                <op_div> 
                                                    / 
                                            <arith_term> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: /, isTerminal: 1 

stack element #1:
symbol: <arith_term>, isTerminal: 0 

stack element #2:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #3:
symbol: <semicolon>, isTerminal: 0 

stack element #4:
symbol: <extra_assn>, isTerminal: 0 

stack element #5:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; / 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <extra_arith_expr>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 0
stack element #0:
symbol: <extra_arith_expr>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <low_op>
this non terminal was replaced with 2 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 2
stack element #0:
symbol: <low_op>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <op_plus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_plus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, +
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_plus> 
                                            + 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: +, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; + 14
; 
not matching
top of stack is, <op_minus>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <op_minus>, isTerminal: 0 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, -
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <low_op> 
                                        <op_minus> 
                                            - 
                                    <arith_expr> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: -, isTerminal: 1 

stack element #1:
symbol: <arith_expr>, isTerminal: 0 

stack element #2:
symbol: <semicolon>, isTerminal: 0 

stack element #3:
symbol: <extra_assn>, isTerminal: 0 

stack element #4:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
; - 14
; 
not matching
top of stack is, <epsilon>
this non terminal was replaced with 1 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_arith_expr> 
                    <expr> 
                    <semicolon> 
                <extra_assn> 
        <assn_list> 
    <curl_close> 
inside buildParseTree
k = 1
stack element #0:
symbol: <epsilon>, isTerminal: 0 

stack element #1:
symbol: <semicolon>, isTerminal: 0 

stack element #2:
symbol: <extra_assn>, isTerminal: 0 

stack element #3:
symbol: <curl_close>, isTerminal: 0 

Lexeme: ;, Token id: 14, Line number: 1
top of stack is, <semicolon>
this non terminal was replaced with 0 tokens.
=====================================================
<program> 
    <k_program> 
        program 
    <par_open> 
        ( 
    <par_close> 
        ) 
    <curl_open> 
        { 
    <statement_list> 
        <dec_list> 
            <dec> 
                <dec_non_jagged> 
                    declare 
                    <decs_non_jagged> 
                        <var_name> 
                            : 
                                : 
                        <colon> 
                            <k_integer> 
                                integer 
                        <non_jagged_type> 
                            ; 
                        <semicolon> 
                            <epsilon> 
            <extra_dec_list> 
                <assn> 
                    <var_name> 
                        = 
                            = 
                    <op_equal> 
                        <arith_expr> 
                            <arith_term> 
                                <arith_factor> 
                                    <const> 
                                        ; 
                                            <epsilon> 
                                <extra_arith_term> 
                                    <epsilon> 
                            <extra_